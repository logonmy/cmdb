import functools
import time

__author__ = "yuchen.huang"

schema_cache = {}


class SchemaCache(object):

    def __init__(self, func):
        self.func = func

    def __call__(self, *args):
        schema_name = args[1]
        if schema_name in schema_cache and (time.time() - schema_cache.get(schema_name).get("timestamp") < 60):
            return schema_cache.get(schema_name).get("value")
        else:
            value = self.func(*args)
            schema_cache[schema_name] = {
                "value": value,
                "timestamp": time.time()
            }
            return value

    def __repr__(self):
        return self.func.__doc__

    def __get__(self, obj, objtype):
        return functools.partial(self.__call__, obj)
